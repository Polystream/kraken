{{- if .Values.agent.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kraken-agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kraken
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kraken
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{ with .Values.agent.annotations }}
      annotations:
{{ tpl . $ | indent 8 -}}
      {{- end }}
    spec:
      {{ with .Values.agent.tolerations -}}
      tolerations:
{{ toYaml . | indent 6 }}
      {{- end }}
      {{ with .Values.agent.affinity -}}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{ with .Values.agent.initContainers -}}
      initContainers:
{{ toYaml . | indent 6 -}}
      {{- end }}
      containers:
      - name: main
        image: {{ .Values.kraken.repository }}/kraken-agent:{{ .Values.kraken.tag }}
        imagePullPolicy: {{ .Values.kraken.imagePullPolicy }}
        command:
        - /usr/bin/kraken-agent
        - --config={{ .Values.agent.config }}
        - --agent-server-port=80
        - --peer-port=8080
        - --agent-registry-port=8081
        - --cluster={{ .Values.kraken.cluster }}
        - --zone={{ .Values.kraken.zone }}
        {{- if .Values.agent.secretConfig }}      
        - --secrets=/etc/secrets/secrets.yaml
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /etc/config
        {{- if .Values.agent.secretConfig }}      
        - name: secret
          mountPath: /etc/secrets
        {{- end }}
        ports:
        - containerPort: 80
          name: agent-server
        - containerPort: 8080
          name: peer
        - containerPort: 8081
          name: agent-registry
        - containerPort: 9000
          name: metrics
        livenessProbe:
          httpGet:
            path: /health
            port: agent-server
          failureThreshold: 1
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /health
            port: agent-server
          failureThreshold: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: agent-server
          periodSeconds: 10
          initialDelaySeconds: 5
    {{- with .Values.kraken.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{ with .Values.agent.extraVolumeMounts }}{{ toYaml . | indent 8 }}{{ end }}
      volumes:
      - name: config
        configMap:
          name: kraken
      {{- if .Values.agent.secretConfig }}      
      - name: secret
        secret:
          secretName: kraken-agent
      {{- end }}
{{ with .Values.agent.extraVolumes }}{{ toYaml . | indent 6 }}{{ end }}
---
kind: Service
apiVersion: v1
metadata:
  name: kraken-agent
spec:
{{- if .Values.agent.serviceIP }}
  clusterIP: {{ .Values.agent.serviceIP }}
{{- end }}
  selector:
    app.kubernetes.io/name: kraken
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8081
    nodePort: {{ .Values.kraken.registry_port }}
  externalTrafficPolicy: Local
  internalTrafficPolicy: Local
{{- end }}